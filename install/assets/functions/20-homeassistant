#!/command/with-contenv bash

bootstrap_filesystem() {
    if [ ! -d "${CONFIG_PATH}" ] ; then
        mkdir -p "${CONFIG_PATH}"
    fi
    if [ "$(stat -c %U "${CONFIG_PATH}")" != "homeassistant" ] ; then silent chown -R "${HOMEASSISTANT_USER}":"${HOMEASSISTANT_GROUP}" "${CONFIG_PATH}" ; fi
    if [ "$(stat -c %a "${CONFIG_PATH}")" != "755" ] ; then chmod -R 755 "${CONFIG_PATH}" ; fi

    if [ ! -d "${CONFIG_CUSTOM_PATH}" ] ; then
        mkdir -p "${CONFIG_CUSTOM_PATH}"
    fi
    if [ "$(stat -c %U "${CONFIG_CUSTOM_PATH}")" != "homeassistant" ] ; then silent chown -R "${HOMEASSISTANT_USER}":"${HOMEASSISTANT_GROUP}" "${CONFIG_CUSTOM_PATH}" ; fi
    if [ "$(stat -c %a "${CONFIG_CUSTOM_PATH}")" != "755" ] ; then chmod -R 755 "${CONFIG_CUSTOM_PATH}" ; fi

    if [ ! -d "${DATA_PATH}" ] ; then
        mkdir -p "${DATA_PATH}"
    fi
    if [ "$(stat -c %U "${DATA_PATH}")" != "homeassistant" ] ; then chown -R "${HOMEASSISTANT_USER}":"${HOMEASSISTANT_GROUP}" "${DATA_PATH}" ; fi
    if [ "$(stat -c %a "${DATA_PATH}")" != "700" ] ; then chmod -R 700 "${DATA_PATH}" ; fi

    if [ ! -d "${LOG_PATH}" ] ; then
        mkdir -p "${LOG_PATH}"
    fi
    if [ "$(stat -c %U "${LOG_PATH}")" != "homeassistant" ] ; then chown homeassistant:homeassistant "${LOG_PATH}" ; fi
    create_logrotate homeassistant "${LOG_PATH}"/"${LOG_FILE}" homeassistant homeassistant homeassistant
}

configure_homeassistant() {
    if var_true "${ENABLE_BUILD_TOOLS}"; then
        package update
        package insall -t .homeassistant-build-deps \
                            build-base \
                            cython \
                            ffmpeg-dev \
                            gcc \
                            g++ \
                            linux-headers \
                            isa-l-dev \
                            jpeg-dev \
                            libffi-dev \
                            libjpeg-turbo-dev \
                            make \
                            mariadb-connector-c-dev \
                            musl-dev \
                            openblas-dev \
                            postgresql-dev \
                            zlib-dev \
                            zlib-ng-dev
    fi

    if [ "${SETUP_MODE,,}" = "auto" ] ; then
        if [ ! -f "${CONFIG_PATH}"/configuration.yaml ]; then
            print_info "Generating Initial Home Assistant Configuration"
            cat <<EOF | silent sudo -u "${HOMEASSISTANT_USER}" tee "${CONFIG_PATH}"/configuration.yaml
## Home Assistant Configuration
## Generated for version ${HOMEASSISTANT_VERSION} from ${IMAGE_NAME} on $(TZ=${TIMEZONE} date +'%Y-%m-%d %H:%M:%S %Z')

frontend:
  themes: !include_dir_merge_named themes

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
EOF
        fi
    fi
}

configure_webserver() {
    update_template \
                    /etc/nginx/sites.available/homeassistant.conf \
                        LISTEN_PORT
}

